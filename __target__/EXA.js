'use strict';import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,
__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,
getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import*as r from"./registers.js";var __name__="EXA";export var EXA=__class__("EXA",[object],{__module__:__name__,get __init__(){return __get__(this,function(self,level,code,host,py_name,start,scope,x,t){if(typeof start=="undefined"||start!=null&&start.hasOwnProperty("__kwargtrans__"))var start=
0;if(typeof scope=="undefined"||scope!=null&&scope.hasOwnProperty("__kwargtrans__"))var scope="GLOBAL";if(typeof x=="undefined"||x!=null&&x.hasOwnProperty("__kwargtrans__"))var x=r.Register(0);if(typeof t=="undefined"||t!=null&&t.hasOwnProperty("__kwargtrans__"))var t=r.Register(0);self.py_name=py_name;self.code=code;self.location=host;self.cycle=level.cyc;self.level=level;self.registers=dict({"X":x,"T":t,"F":null,"M":r.Communication(scope,self)});self.children=[];self.labels=dict({});self.line=0;
for(var line of code){if(line[0]=="MARK")self.mark(line.__getslice__(1,null,1));self.line++}self.line=start})},get __repr__(){return __get__(this,function(self){var line=str(self.line+1)+"/"+str(len(self.code));if(self.line+1>len(self.code))var line="HALTED";var string="\n"+self.py_name+": Line "+line+"\n"+str(self.registers)+"\n"+str(self.location);if(self.registers["F"]!=null)string+="\n"+self.registers["F"].reprlong();string+="\n";return string})},get clamp(){return __get__(this,function(self,
val){if(val>9999)var val=9999;if(val<-9999)var val=-9999;return val})},get typeArgs(){return __get__(this,function(self,args,types){var args=function(){var __accu0__=[];for(var e of zip(args,types))__accu0__.append(list(e));return __accu0__}();try{for(var i=0;i<len(args);i++){if(args[i][1]=="R")if(!__in__(args[i][0],["X","T","F","M"])){var __except0__=Exception("INVALID ARGUMENTS");__except0__.__cause__=null;throw __except0__;}if(args[i][1]=="R/N")if(__in__(args[i][0],["X","T","F","M"]))args[i][1]=
"R";else if(py_typeof(args[i][0])==int&&-9999<=args[i][0]&&args[i][0]<=9999)args[i][1]="N";else{var __except0__=Exception("INVALID ARGUMENTS");__except0__.__cause__=null;throw __except0__;}if(args[i][1]=="L")if(!(py_typeof(args[i][0])==str)){var __except0__=Exception("INVALID ARGUMENTS");__except0__.__cause__=null;throw __except0__;}}}catch(__except0__){if(isinstance(__except0__,IndexError)){var __except1__=Exception("INVALID ARGUMENTS");__except1__.__cause__=null;throw __except1__;}else throw __except0__;
}for(var i=0;i<len(args);i++)if(args[i][1]=="R"&&types[i]=="R/N")args[i]=self.registers[args[i][0]].value();else args[i]=args[i][0];return args})},get copy(){return __get__(this,function(self,args){var args=self.typeArgs(args,["R/N","R"]);self.registers[args[1]].assign(args[0])})},get addi(){return __get__(this,function(self,args){var args=self.typeArgs(args,["R/N","R/N","R"]);if(py_typeof(args[0])!=int||py_typeof(args[1])!=int){var __except0__=Exception("NUMERIC VALUE REQUIRED");__except0__.__cause__=
null;throw __except0__;}var val=args[0]+args[1];var val=self.clamp(val);self.registers[args[2]].assign(val)})},get subi(){return __get__(this,function(self,args){var args=self.typeArgs(args,["R/N","R/N","R"]);if(py_typeof(args[0])!=int||py_typeof(args[1])!=int){var __except0__=Exception("NUMERIC VALUE REQUIRED");__except0__.__cause__=null;throw __except0__;}var val=args[0]-args[1];var val=self.clamp(val);self.registers[args[2]].assign(val)})},get muli(){return __get__(this,function(self,args){var args=
self.typeArgs(args,["R/N","R/N","R"]);if(py_typeof(args[0])!=int||py_typeof(args[1])!=int){var __except0__=Exception("NUMERIC VALUE REQUIRED");__except0__.__cause__=null;throw __except0__;}var val=args[0]*args[1];var val=self.clamp(val);self.registers[args[2]].assign(val)})},get divi(){return __get__(this,function(self,args){var args=self.typeArgs(args,["R/N","R/N","R"]);if(py_typeof(args[0])!=int||py_typeof(args[1])!=int){var __except0__=Exception("NUMERIC VALUE REQUIRED");__except0__.__cause__=
null;throw __except0__;}if(args[1]==0){var __except0__=Exception("CANNOT DIVIDE BY ZERO");__except0__.__cause__=null;throw __except0__;}var val=args[0]/args[1];var val=self.clamp(val);self.registers[args[2]].assign(val)})},get modi(){return __get__(this,function(self,args){var args=self.typeArgs(args,["R/N","R/N","R"]);if(py_typeof(args[0])!=int||py_typeof(args[1])!=int){var __except0__=Exception("NUMERIC VALUE REQUIRED");__except0__.__cause__=null;throw __except0__;}if(args[1]==0){var __except0__=
Exception("CANNOT DIVIDE BY ZERO");__except0__.__cause__=null;throw __except0__;}var val=__mod__(args[0],args[1]);var val=self.clamp(val);self.registers[args[2]].assign(val)})},get swiz(){return __get__(this,function(self,args){var args=self.typeArgs(args,["R/N","R/N","R"]);if(py_typeof(args[0])!=int||py_typeof(args[1])!=int){var __except0__=Exception("NUMERIC VALUE REQUIRED");__except0__.__cause__=null;throw __except0__;}args[0]=str(args[0]);while(len(args[0])<9)args[0]="0"+args[0];args[1]=str(args[1]);
while(len(args[1])<4)args[1]="0"+args[1];var val="";for(var e of args[1])val+=args[0][-int(e)];self.registers[args[2]].assign(int(val))})},get mark(){return __get__(this,function(self,args){var args=self.typeArgs(args,["L"]);if(__in__(args[0],self.labels)){var __except0__=Exception("Label already defined");__except0__.__cause__=null;throw __except0__;}self.labels[args[0]]=self.line})},get jump(){return __get__(this,function(self,args){var args=self.typeArgs(args,["L"]);if(!__in__(args[0],self.labels)){var __except0__=
Exception("Label not defined");__except0__.__cause__=null;throw __except0__;}self.line=self.labels[args[0]]})},get tjmp(){return __get__(this,function(self,args){var args=self.typeArgs(args,["L"]);if(!__in__(args[0],self.labels)){var __except0__=Exception("Label not defined");__except0__.__cause__=null;throw __except0__;}if(self.registers["T"].value()==1)self.line=self.labels[args[0]]})},get fjmp(){return __get__(this,function(self,args){var args=self.typeArgs(args,["L"]);if(!__in__(args[0],self.labels)){var __except0__=
Exception("Label not defined");__except0__.__cause__=null;throw __except0__;}if(self.registers["T"].value()==0)self.line=self.labels[args[0]]})},get teste(){return __get__(this,function(self,args){var args=self.typeArgs(args,["R/N","R/N"]);if(args[0]==args[1])self.registers["T"].assign(1);else self.registers["T"].assign(0)})},get testg(){return __get__(this,function(self,args){var args=self.typeArgs(args,["R/N","R/N"]);if(py_typeof(args[0])!=py_typeof(args[1]))return self.registers["T"].assign(0);
if(py_typeof(args[0])==int)if(args[0]>args[1])self.registers["T"].assign(1);else self.registers["T"].assign(0);if(py_typeof(args[0])==str){args[0]=args[0].lower();args[1]=args[1].lower();if(args[0]<args[1])self.registers["T"].assign(1);else self.registers["T"].assign(0)}})},get testl(){return __get__(this,function(self,args){var args=self.typeArgs(args,["R/N","R/N"]);if(py_typeof(args[0])!=py_typeof(args[1]))return self.registers["T"].assign(0);if(py_typeof(args[0])==int)if(args[0]<args[1])self.registers["T"].assign(1);
else self.registers["T"].assign(0);if(py_typeof(args[0])==str){args[0]=args[0].lower();args[1]=args[1].lower();if(args[0]>args[1])self.registers["T"].assign(1);else self.registers["T"].assign(0)}})},get repl(){return __get__(this,function(self,args){var args=self.typeArgs(args,["L"]);if(!__in__(args[0],self.labels)){var __except0__=Exception("Label not defined");__except0__.__cause__=null;throw __except0__;}var exa=EXA(self.level,self.code,self.location,self.py_name+":"+len(self.children),self.labels[args[0]],
self.scope,r.Register(self.registers["X"].value()),r.Register(self.registers["T"].value()));self.level.exas.append(exa);self.children.append(exa)})},get halt(){return __get__(this,function(self,args){self.line=len(self.code)})},get kill(){return __get__(this,function(self,args){self.level.kill(self.py_name,self.location)})},get link(){return __get__(this,function(self,args){var args=self.typeArgs(args,["R/N"]);if(py_typeof(args[0])!=int){var __except0__=Exception("NUMERIC VALUE REQUIRED");__except0__.__cause__=
null;throw __except0__;}if(__in__(str(args[0]),self.level.hosts[self.location]["links"])){self.location=self.level.hosts[self.location]["links"][str(args[0])];if(self.registers["F"]!=null)self.registers["F"].link(self.location)}else{var __except0__=Exception("LINK ID NOT FOUND");__except0__.__cause__=null;throw __except0__;}})},get host(){return __get__(this,function(self,args){var args=self.typeArgs(args,["R"]);self.registers[args[0]].assign(self.location)})},get mode(){return __get__(this,function(self,
args){self.registers["M"].mode()})},get voidm(){return __get__(this,function(self){self.registers["M"].value()})},get testmrd(){return __get__(this,function(self){return self.registers["M"].mrd()})},get make(){return __get__(this,function(self,args){if(self.registers["F"]==null){var i=400;while(__in__(i,self.level.files()))i++;self.registers["F"]=r.File([],i,self.location)}else{var __except0__=Exception("CANNOT GRAB A SECOND FILE");__except0__.__cause__=null;throw __except0__;}})},get grab(){return __get__(this,
function(self,args){if(self.registers["F"]!=null){var __except0__=Exception("CANNOT GRAB A SECOND FILE");__except0__.__cause__=null;throw __except0__;}var args=self.typeArgs(args,["R/N"]);if(py_typeof(args[0])!=int){var __except0__=Exception("NUMERIC VALUE REQUIRED");__except0__.__cause__=null;throw __except0__;}if(self.level.grab(self.location,args[0]))self.registers["F"]=self.level.grab(self.location,args[0]);else{var __except0__=Exception("FILE ID NOT FOUND");__except0__.__cause__=null;throw __except0__;
}})},get file(){return __get__(this,function(self,args){if(self.registers["F"]==null){var __except0__=Exception("NO FILE IS HELD");__except0__.__cause__=null;throw __except0__;}var args=self.typeArgs(args,["R"]);args[0].assign(self.registers["F"].id)})},get seek(){return __get__(this,function(self,args){if(self.registers["F"]==null){var __except0__=Exception("NO FILE IS HELD");__except0__.__cause__=null;throw __except0__;}var args=self.typeArgs(args,["R/N"]);if(py_typeof(args[0])!=int){var __except0__=
Exception("NUMERIC VALUE REQUIRED");__except0__.__cause__=null;throw __except0__;}self.registers["F"].seek(args[0])})},get voidf(){return __get__(this,function(self){if(self.registers["F"]==null){var __except0__=Exception("NO FILE IS HELD");__except0__.__cause__=null;throw __except0__;}self.registers["F"].void()})},get drop(){return __get__(this,function(self,args){if(self.registers["F"]==null){var __except0__=Exception("NO FILE IS HELD");__except0__.__cause__=null;throw __except0__;}self.registers["F"]=
null})},get wipe(){return __get__(this,function(self,args){if(self.registers["F"]==null){var __except0__=Exception("NO FILE IS HELD");__except0__.__cause__=null;throw __except0__;}self.registers["F"].wipe()})},get testeof(){return __get__(this,function(self){if(self.registers["F"]==null){var __except0__=Exception("NO FILE IS HELD");__except0__.__cause__=null;throw __except0__;}if(self.registers["F"].eof())self.registers["T"].assign(1);else self.registers["T"].assign(0)})},get eval(){return __get__(this,
function(self,cyc){if(self.cycle<cyc&&self.line<len(self.code)){print(self);var line=self.code[self.line];if(!__in__(line[0],["TEST","VOID","NOOP","NOTE","MARK"]))getattr(self,line[0].lower())(line.__getslice__(1,null,1));else if(line[0]=="VOID")if(line[1]=="M")self.voidm();else{if(line[1]=="F")self.voidf()}else if(line[0]=="TEST")if(line[1]=="EOF")self.testeof();else if(line[1]=="MRD")self.testmrd();else{if(line[2]=="=")self.teste([line[1],line[3]]);if(line[2]==">")self.testg([line[1],line[3]]);
if(line[2]=="<")self.testl([line[1],line[3]])}self.line++;self.cycle++;if(self.line==len(self.code))print(self)}})}});

//# sourceMappingURL=EXA.map